//2차원 배열 정렬
//길이가 같은 배열
function test(_array) {
    console.time();
    _array.sort((a,b)=> {
        if(a.length < b.length){
            return -1
        }else if(a.length > b.length ){
            return 1;
        }else{
            if(a === b){
                return 0;
            }else{
                return 1;
            }
        }
    })    
    const WrapArray = [];
    let partArray = []
    let nowSize = 1;
    _array.map((index)=>{
        if(nowSize == index.length){
            partArray[partArray.length] =index;
        }else{
            nowSize = index.length;
            partArray.sort();
            partArray.map((partindex)=>{
                WrapArray[WrapArray.length] = partindex;
            })
            partArray = [];
            partArray[partArray.length]= index;
            if(_array[_array.length-1].length === index.length){
                WrapArray[WrapArray.length] =partArray;
            }
        }
    })
    console.log(WrapArray)
    return WrapArray ;
}

const array = [
    [],
    [0],
    [1],
    [0, 1],
    [2],
    [0, 2],
    [1, 2],
    [0, 1, 2],
    [3],
    [0, 3],
    [1, 3],
    [0, 1, 3],
    [2, 3],
    [0, 2, 3],
    [1, 2, 3],
    [0, 1, 2, 3],
    [4],
    [0, 4],
    [1, 4],
    [0, 1, 4],
    [2, 4],
    [0, 2, 4],
    [1, 2, 4],
    [0, 1, 2, 4],
    [3, 4],
    [0, 3, 4],
    [1, 3, 4],
    [0, 1, 3, 4],
    [2, 3, 4],
    [0, 2, 3, 4],
    [1, 2, 3, 4],
    [0, 1, 2, 3, 4],
    [5],
    [0, 5],
    [1, 5],
    [0, 1, 5],
    [2, 5],
    [0, 2, 5],
    [1, 2, 5],
    [0, 1, 2, 5],
    [3, 5],
    [0, 3, 5],
    [1, 3, 5],
    [0, 1, 3, 5],
    [2, 3, 5],
    [0, 2, 3, 5],
    [1, 2, 3, 5],
    [0, 1, 2, 3, 5],
    [4, 5],
    [0, 4, 5],
    [1, 4, 5],
    [0, 1, 4, 5],
    [2, 4, 5],
    [0, 2, 4, 5],
    [1, 2, 4, 5],
    [0, 1, 2, 4, 5],
    [3, 4, 5],
    [0, 3, 4, 5],
    [1, 3, 4, 5],
    [0, 1, 3, 4, 5],
    [2, 3, 4, 5],
    [0, 2, 3, 4, 5],
    [1, 2, 3, 4, 5],
    [0, 1, 2, 3, 4, 5],
    [6],
    [0, 6],
    [1, 6],
    [0, 1, 6],
    [2, 6],
    [0, 2, 6],
    [1, 2, 6],
    [0, 1, 2, 6],
    [3, 6],
    [0, 3, 6],
    [1, 3, 6],
    [0, 1, 3, 6],
    [2, 3, 6],
    [0, 2, 3, 6],
    [1, 2, 3, 6],
    [0, 1, 2, 3, 6],
    [4, 6],
    [0, 4, 6],
    [1, 4, 6],
    [0, 1, 4, 6],
    [2, 4, 6],
    [0, 2, 4, 6],
    [1, 2, 4, 6],
    [0, 1, 2, 4, 6],
    [3, 4, 6],
    [0, 3, 4, 6],
    [1, 3, 4, 6],
    [0, 1, 3, 4, 6],
    [2, 3, 4, 6],
    [0, 2, 3, 4, 6],
    [1, 2, 3, 4, 6],
    [0, 1, 2, 3, 4, 6],
    [5, 6],
    [0, 5, 6],
    [1, 5, 6],
    [0, 1, 5, 6],
    [2, 5, 6],
    [0, 2, 5, 6],
    [1, 2, 5, 6],
    [0, 1, 2, 5, 6],
    [3, 5, 6],
    [0, 3, 5, 6],
    [1, 3, 5, 6],
    [0, 1, 3, 5, 6],
    [2, 3, 5, 6],
    [0, 2, 3, 5, 6],
    [1, 2, 3, 5, 6],
    [0, 1, 2, 3, 5, 6],
    [4, 5, 6],
    [0, 4, 5, 6],
    [1, 4, 5, 6],
    [0, 1, 4, 5, 6],
    [2, 4, 5, 6],
    [0, 2, 4, 5, 6],
    [1, 2, 4, 5, 6],
    [0, 1, 2, 4, 5, 6],
    [3, 4, 5, 6],
    [0, 3, 4, 5, 6],
    [1, 3, 4, 5, 6],
    [0, 1, 3, 4, 5, 6],
    [2, 3, 4, 5, 6],
    [0, 2, 3, 4, 5, 6],
    [1, 2, 3, 4, 5, 6],
    [0, 1, 2, 3, 4, 5, 6],
    [7],
    [0, 7],
    [1, 7],
    [0, 1, 7],
    [2, 7],
    [0, 2, 7],
    [1, 2, 7],
    [0, 1, 2, 7],
    [3, 7],
    [0, 3, 7],
    [1, 3, 7],
    [0, 1, 3, 7],
    [2, 3, 7],
    [0, 2, 3, 7],
    [1, 2, 3, 7],
    [0, 1, 2, 3, 7],
    [4, 7],
    [0, 4, 7],
    [1, 4, 7],
    [0, 1, 4, 7],
    [2, 4, 7],
    [0, 2, 4, 7],
    [1, 2, 4, 7],
    [0, 1, 2, 4, 7],
    [3, 4, 7],
    [0, 3, 4, 7],
    [1, 3, 4, 7],
    [0, 1, 3, 4, 7],
    [2, 3, 4, 7],
    [0, 2, 3, 4, 7],
    [1, 2, 3, 4, 7],
    [0, 1, 2, 3, 4, 7],
    [5, 7],
    [0, 5, 7],
    [1, 5, 7],
    [0, 1, 5, 7],
    [2, 5, 7],
    [0, 2, 5, 7],
    [1, 2, 5, 7],
    [0, 1, 2, 5, 7],
    [3, 5, 7],
    [0, 3, 5, 7],
    [1, 3, 5, 7],
    [0, 1, 3, 5, 7],
    [2, 3, 5, 7],
    [0, 2, 3, 5, 7],
    [1, 2, 3, 5, 7],
    [0, 1, 2, 3, 5, 7],
    [4, 5, 7],
    [0, 4, 5, 7],
    [1, 4, 5, 7],
    [0, 1, 4, 5, 7],
    [2, 4, 5, 7],
    [0, 2, 4, 5, 7],
    [1, 2, 4, 5, 7],
    [0, 1, 2, 4, 5, 7],
    [3, 4, 5, 7],
    [0, 3, 4, 5, 7],
    [1, 3, 4, 5, 7],
    [0, 1, 3, 4, 5, 7],
    [2, 3, 4, 5, 7],
    [0, 2, 3, 4, 5, 7],
    [1, 2, 3, 4, 5, 7],
    [0, 1, 2, 3, 4, 5, 7],
    [6, 7],
    [0, 6, 7],
    [1, 6, 7],
    [0, 1, 6, 7],
    [2, 6, 7],
    [0, 2, 6, 7],
    [1, 2, 6, 7],
    [0, 1, 2, 6, 7],
    [3, 6, 7],
    [0, 3, 6, 7],
    [1, 3, 6, 7],
    [0, 1, 3, 6, 7],
    [2, 3, 6, 7],
    [0, 2, 3, 6, 7],
    [1, 2, 3, 6, 7],
    [0, 1, 2, 3, 6, 7],
    [4, 6, 7],
    [0, 4, 6, 7],
    [1, 4, 6, 7],
    [0, 1, 4, 6, 7],
    [2, 4, 6, 7],
    [0, 2, 4, 6, 7],
    [1, 2, 4, 6, 7],
    [0, 1, 2, 4, 6, 7],
    [3, 4, 6, 7],
    [0, 3, 4, 6, 7],
    [1, 3, 4, 6, 7],
    [0, 1, 3, 4, 6, 7],
    [2, 3, 4, 6, 7],
    [0, 2, 3, 4, 6, 7],
    [1, 2, 3, 4, 6, 7],
    [0, 1, 2, 3, 4, 6, 7],
    [5, 6, 7],
    [0, 5, 6, 7],
    [1, 5, 6, 7],
    [0, 1, 5, 6, 7],
    [2, 5, 6, 7],
    [0, 2, 5, 6, 7],
    [1, 2, 5, 6, 7],
    [0, 1, 2, 5, 6, 7],
    [3, 5, 6, 7],
    [0, 3, 5, 6, 7],
    [1, 3, 5, 6, 7],
    [0, 1, 3, 5, 6, 7],
    [2, 3, 5, 6, 7],
    [0, 2, 3, 5, 6, 7],
    [1, 2, 3, 5, 6, 7],
    [0, 1, 2, 3, 5, 6, 7],
    [4, 5, 6, 7],
    [0, 4, 5, 6, 7],
    [1, 4, 5, 6, 7],
    [0, 1, 4, 5, 6, 7],
    [2, 4, 5, 6, 7],
    [0, 2, 4, 5, 6, 7],
    [1, 2, 4, 5, 6, 7],
    [0, 1, 2, 4, 5, 6, 7],
    [3, 4, 5, 6, 7],
    [0, 3, 4, 5, 6, 7],
    [1, 3, 4, 5, 6, 7],
    [0, 1, 3, 4, 5, 6, 7],
    [2, 3, 4, 5, 6, 7],
    [0, 2, 3, 4, 5, 6, 7],
    [1, 2, 3, 4, 5, 6, 7],
    [0, 1, 2, 3, 4, 5, 6, 7]
];
    
test(array);
